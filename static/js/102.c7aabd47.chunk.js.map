{"version":3,"file":"static/js/102.c7aabd47.chunk.js","mappings":"gPAEaA,EAAOC,EAAAA,EAAAA,GAAH,gIAQJC,EAASD,EAAAA,EAAAA,OAAH,oL,SCWnB,EAjBoB,SAAC,GAAwB,IAAvBE,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OAE9B,GAAuDC,EAAAA,EAAAA,MAAvD,eAAOC,EAAP,KAAuCC,EAAvC,KAA4BC,UAEtBC,GAAOC,EAAAA,EAAAA,KAIb,OAHAC,QAAQC,IAAI,OAAQH,IAIhB,UAACV,EAAD,WAAOI,EAAP,KAAeC,GAEf,SAACH,EAAD,CAAQY,QAAS,kBAAMP,EAAkBJ,EAAxB,EAA6BY,SAAWP,EAAzD,SAAwEA,EAAa,cAAgB,aAG1G,ECND,EAVoB,SAAC,GAAkB,IAAhBQ,EAAe,EAAfA,SAErB,OACE,wBACKA,EAASC,KAAI,SAAAC,GAAO,OAAI,SAAC,GAAD,UAAkCA,GAAhBA,EAAQf,GAA9B,KAG5B,E,kBCWD,EAjBqB,WAEnB,IAAMgB,GAAWC,EAAAA,EAAAA,MASf,OAAO,gBAAKC,MAAO,CAACC,UAAW,UAAxB,UAAmC,qDACxC,kBAAOC,KAAK,OAAOC,SAPD,SAACC,GAEvBN,GAASO,EAAAA,EAAAA,IAAUD,EAAME,OAAOC,OAC/B,QAMF,ECgBD,EA3BqB,WAAO,IAAD,EAEzB,GAAwCC,EAAAA,EAAAA,MAAhCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAAYC,EAA1B,EAA0BA,UAC1BpB,QAAQC,IAAI,OAAQiB,GACpBlB,QAAQC,IAAI,yBAAyBgB,EAAAA,EAAAA,OAGrC,IAAMI,GAAYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOR,KAAjB,IAI7BS,EAAgB,iBAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAMM,QAAO,SAAAE,GAAG,OAAIA,EAAIlC,KAAKmC,cAAcC,SAASP,EAApC,WAAnB,QAAsE,GAI3F,OAHDrB,QAAQC,IAAI,mBAAoBwB,IAGxB,2BACFL,IAAa,eAAIX,MAAO,CAACC,UAAW,UAAvB,sBAEbS,IAAc,SAACU,EAAA,EAAD,KAEf,SAAC,EAAD,IAECX,IAAQ,SAAC,EAAD,CAAad,SAAUqB,MAEtC,C","sources":["components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/FilterByName/FilterByName.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Item = styled.li`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin-bottom: 10px;\nfont-size: 20px;\n`;\n\nexport const Button = styled.button`\nmargin-left: 10px;\npadding: 5px;\nborder-radius: 4px;\nborder-color: #747274;\nfont-weight: 600;\ncursor: pointer;\n&:hover {\nbackground-color: #f32b2b;\n`;","import { useDeleteContactMutation, useEditContactMutation } from \"redux/userApi\";\nimport { Item, Button } from './ContactItem.styled';\n\n// из распыленного contact в ContactsList деструктуризируем след-щие параметры:\nconst ContactItem = ({id, name, number}) => {\n    // ф-я возвращает ф-ю и статусы выполнения\n  const [deleteContactFunc, { isLoading: isDeleting }] = useDeleteContactMutation();\n  // const [EditContactFunc, { isLoading }] = useEditContactMutation();\n  const edit = useEditContactMutation();\n  console.log(\"edit\", edit);\n\n  \n  return (\n      <Item>{name}: {number}\n      {/* <Button onClick={() => EditContactFunc(id)} disabled={ isLoading } >{isLoading ? 'Editing...' : 'Edit'}</Button> */}\n      <Button onClick={() => deleteContactFunc(id)} disabled={ isDeleting } >{isDeleting ? 'Deleting...' : 'Delete'}</Button>\n      </Item>\n  )\n}\n\n\nexport default ContactItem;","import ContactItem from 'components/ContactItem';\n\nconst ContactList = ({ contacts }) => {\n  \n  return (\n    <ul>        \n        {contacts.map(contact=> (<ContactItem key={contact.id} {...contact}></ContactItem>))}\n    </ul>\n  )\n}\n\n\nexport default ContactList;","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nconst FilterByName = () => {\n  // получает ссылку на функцию для отправки действий\n  const dispatch = useDispatch();\n\n  // записывает в filter(store) вводимые в input(FilterByName) данные \n   const handleFilter = (event) => {  \n  // отправляет action setFilter со значением value\n  dispatch(setFilter(event.target.value))\n  };\n\n\n    return(<div style={{textAlign: \"center\"}}><label>Find contact by Name\n      <input type=\"text\" onChange={handleFilter} />\n    </label></div>)\n}\n\n\nexport default FilterByName;","import { useSelector } from \"react-redux\";\nimport ContactList from \"components/ContactList\";\nimport { useAllContactsQuery } from \"redux/userApi\";\nimport Loader from \"components/Loader\";\nimport FilterByName from \"components/FilterByName\";\n\nconst ContactsPage = () => {\n    // ф-я возвращает данные и статусы выполнения\n  const { data, isFetching, isSuccess } = useAllContactsQuery();\n  console.log(\"data\", data);\n  console.log(\"useAllContactsQuery()\", useAllContactsQuery());\n\n    // читает данные из state.filter(store) и подписывается на их обновление\n  const inputData = useSelector(state => state.filter.value)\n  // console.log(\"inputData\", inputData);\n   \n    // выдает отфильтрованные контакты (если есть data - обрабатывает, а если нет - [])\n  const filteredContacts = data?.filter(obj => obj.name.toLowerCase().includes(inputData)) ?? [];\n  console.log(\"filteredContacts\", filteredContacts);\n\n    \n   return <div>\n       {isSuccess && <h1 style={{textAlign: \"center\"}}>Contacts</h1>}\n\n       {isFetching && <Loader />}\n       \n       <FilterByName></FilterByName>\n       \n       {data && <ContactList contacts={filteredContacts} />}\n   </div>\n}\n\n\nexport default ContactsPage;"],"names":["Item","styled","Button","id","name","number","useDeleteContactMutation","deleteContactFunc","isDeleting","isLoading","edit","useEditContactMutation","console","log","onClick","disabled","contacts","map","contact","dispatch","useDispatch","style","textAlign","type","onChange","event","setFilter","target","value","useAllContactsQuery","data","isFetching","isSuccess","inputData","useSelector","state","filter","filteredContacts","obj","toLowerCase","includes","Loader"],"sourceRoot":""}