{"version":3,"file":"static/js/903.ed558c4d.chunk.js","mappings":"0NAEaA,EAAOC,EAAAA,EAAAA,KAAH,uGAMJC,EAAQD,EAAAA,EAAAA,MAAH,iEAKLE,EAAQF,EAAAA,EAAAA,MAAH,4CAILG,EAASH,EAAAA,EAAAA,OAAH,qK,SCYnB,EA3BoB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SAEf,OACE,UAACL,EAAD,CAAMK,SAAUA,EAAhB,WACE,UAACH,EAAD,mBACE,SAACC,EAAD,CACEG,KAAK,OACLC,KAAK,OACLC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAEZ,UAACR,EAAD,oBACE,SAACC,EAAD,CACEG,KAAK,MACLC,KAAK,QACLC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAACN,EAAD,CAAQE,KAAK,SAAb,2BAGX,E,2BCuBD,EA3CuB,WAEnB,IAAMK,GAAWC,EAAAA,EAAAA,MAGTC,GAASC,EAAAA,EAAAA,MAATD,KAGR,GAAyCE,EAAAA,EAAAA,MAAzC,eAAOC,EAAP,KAA2BC,EAA3B,KAA2BA,UAyB3B,OAAO,2BAEFA,IAAa,SAACC,EAAA,EAAD,KAEd,SAAC,EAAD,CAAab,SA1BI,SAAAc,GACjBA,EAAMC,iBAEN,IAAMb,EAAOY,EAAME,OAAOC,SAASf,KAAKgB,MAElCC,EAASL,EAAME,OAAOC,SAASG,MAAMF,MAE3CJ,EAAMO,cAAcC,QAGId,EAAKe,MAAK,SAAAC,GAAO,OAAIA,EAAQtB,OAASA,CAArB,IAGrCuB,MAAM,GAAD,OAAIvB,EAAJ,mCAITS,EAAkB,CAAET,KAAAA,EAAMiB,OAAAA,IAC1Bb,EAAS,aACZ,MAUJ,C","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/AddContactPage/AddContactPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\npadding: 20px;\ndisplay: flex; \nflex-direction: column; \nalign-items: center;`\n\nexport const Label = styled.label`\nmargin-bottom: 20px;\nfont-weight: 700;\n`;\n\nexport const Input = styled.input`\nmargin-left: 10px;\n`;\n\nexport const Button = styled.button`\npadding: 5px;\nborder-radius: 4px;\nborder-color: #747274;\nfont-weight: 600;\ncursor: pointer;\n&:hover {\nbackground-color: #87ff37b3;\n}\n`;","import { Form, Label, Input, Button} from './ContactForm.styled'\n\nconst ContactForm = ({ onSubmit }) => { \n\n        return( \n          <Form onSubmit={onSubmit}>\n            <Label>Name\n              <Input \n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required/>\n            </Label>\n            <Label>Phone\n              <Input\n                type=\"tel\"\n                name=\"phone\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n              />\n            </Label>\n            <Button type=\"submit\">Add contact</Button>\n      </Form>\n    )    \n}\n\n\nexport default ContactForm;","import ContactForm from \"components/ContactForm\";\nimport { useNavigate } from 'react-router-dom';\nimport { useNewContactMutation, useAllContactsQuery } from \"redux/userApi\";\nimport Loader from \"components/Loader\";\n    \n    \nconst AddContactPage = () => {\n    // для отправки пользователя на другую page\n    const navigate = useNavigate();\n\n    // ф-я возвращает данные (и статусы выполнения, к-рые в данном случае не исп-ются\n    const { data } = useAllContactsQuery();\n\n    // ф-я возвращает ф-ю и статусы выполнения\n    const [createContactFunc, {isLoading}] = useNewContactMutation();\n\n    // добавляет элемент, используяданные из формы\n    const handleSubmit = event => {\n        event.preventDefault();\n        // значение input поля name\n        const name = event.target.elements.name.value;\n        // значение input поля phone\n        const number = event.target.elements.phone.value;\n        // сброс значений инпутов формы\n        event.currentTarget.reset();\n\n        // есть ли добавляемый контакт в списке уже существующих контактов ?\n        const contactIsInList = data.some(contact => contact.name === name);\n        if (contactIsInList) {\n            // сообщение об ошибке\n            alert(`${name} is already in contacts list.`);    \n            return;\n        }\n        // если нового контакта нет в списке, осуществляется вызов ф-и, к-рая создаёт новый контакт с данными, полученными из input-ов, и отправляет его на бэк-энд mockAPI.\n        createContactFunc({ name, number, });\n        navigate('/contacts');\n    }\n\n\n    return <div>\n\n        {isLoading && <Loader />}\n\n        <ContactForm onSubmit={handleSubmit}></ContactForm>\n\n    </div>\n}\n\n\nexport default AddContactPage;"],"names":["Form","styled","Label","Input","Button","onSubmit","type","name","pattern","title","required","navigate","useNavigate","data","useAllContactsQuery","useNewContactMutation","createContactFunc","isLoading","Loader","event","preventDefault","target","elements","value","number","phone","currentTarget","reset","some","contact","alert"],"sourceRoot":""}